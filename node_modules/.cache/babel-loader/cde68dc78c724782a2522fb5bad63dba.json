{"ast":null,"code":"export default ((state, action) => {\n  const {\n    carts\n  } = state;\n  let cartIndex;\n\n  switch (action.type) {\n    case \"ADD_CART\":\n      cartIndex = carts.findIndex(cart => cart.id === action.payload);\n\n      if (cartIndex !== -1) {\n        carts[cartIndex].quantity = carts[cartIndex].quantity + 1;\n        return { ...state,\n          carts: [...carts]\n        };\n      } else {\n        return { ...state,\n          carts: [...state.carts, {\n            id: action.payload,\n            quantity: 1\n          }]\n        };\n      }\n\n    case \"FETCH_CART\":\n      return { ...state,\n        carts: [...state.carts, ...action.payload]\n      };\n\n    case \"UPDATE_CART\":\n      cartIndex = carts.findIndex(cart => cart.id === action.payload.id);\n\n      if (cartIndex !== -1) {\n        carts[cartIndex].quantity = action.payload.quantity;\n      }\n\n      return { ...state,\n        carts: [...carts]\n      };\n\n    case \"REMOVE_CART\":\n      return { ...state,\n        carts: state.carts.filter(cart => cart.id !== action.payload)\n      };\n\n    case \"GET_SEARCHED_STRING\":\n      return { ...state,\n        searchString: action.payload.trim() === \"\" ? null : action.payload\n      };\n\n    case \"GET_SEARCHED_BOOKS\":\n      const reg = new RegExp(`${action.payload}`, \"gi\");\n      return { ...state,\n        searchedBooks: state.books.filter(book => book.title.match(reg))\n      };\n\n    case \"CLEAR_SEARCH\":\n      return { ...state,\n        searchString: null,\n        searchedBooks: []\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/win10/Desktop/bookStore/react-bookstore-cart/src/context/Reducer.js"],"names":["state","action","carts","cartIndex","type","findIndex","cart","id","payload","quantity","filter","searchString","trim","reg","RegExp","searchedBooks","books","book","title","match"],"mappings":"AAAA,gBAAe,CAACA,KAAD,EAAQC,MAAR,KAAmB;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAYF,KAAlB;AACA,MAAIG,SAAJ;;AAEA,UAAQF,MAAM,CAACG,IAAf;AACE,SAAK,UAAL;AACED,MAAAA,SAAS,GAAGD,KAAK,CAACG,SAAN,CAAgBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACO,OAA3C,CAAZ;;AACA,UAAIL,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACpBD,QAAAA,KAAK,CAACC,SAAD,CAAL,CAAiBM,QAAjB,GAA4BP,KAAK,CAACC,SAAD,CAAL,CAAiBM,QAAjB,GAA4B,CAAxD;AACA,eAAO,EACL,GAAGT,KADE;AAELE,UAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ;AAFF,SAAP;AAID,OAND,MAMO;AACL,eAAO,EACL,GAAGF,KADE;AAELE,UAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiB;AAAEK,YAAAA,EAAE,EAAEN,MAAM,CAACO,OAAb;AAAsBC,YAAAA,QAAQ,EAAE;AAAhC,WAAjB;AAFF,SAAP;AAID;;AAEH,SAAK,YAAL;AACE,aAAO,EACL,GAAGT,KADE;AAELE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiB,GAAGD,MAAM,CAACO,OAA3B;AAFF,OAAP;;AAKF,SAAK,aAAL;AACEL,MAAAA,SAAS,GAAGD,KAAK,CAACG,SAAN,CAAgBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACO,OAAP,CAAeD,EAAnD,CAAZ;;AACA,UAAIJ,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACpBD,QAAAA,KAAK,CAACC,SAAD,CAAL,CAAiBM,QAAjB,GAA4BR,MAAM,CAACO,OAAP,CAAeC,QAA3C;AACD;;AACD,aAAO,EACL,GAAGT,KADE;AAELE,QAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ;AAFF,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,MAAZ,CAAmBJ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACO,OAA9C;AAFF,OAAP;;AAIF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGR,KADE;AAELW,QAAAA,YAAY,EAAEV,MAAM,CAACO,OAAP,CAAeI,IAAf,OAA0B,EAA1B,GAA+B,IAA/B,GAAsCX,MAAM,CAACO;AAFtD,OAAP;;AAIF,SAAK,oBAAL;AACE,YAAMK,GAAG,GAAG,IAAIC,MAAJ,CAAY,GAAEb,MAAM,CAACO,OAAQ,EAA7B,EAAgC,IAAhC,CAAZ;AACA,aAAO,EACL,GAAGR,KADE;AAELe,QAAAA,aAAa,EAAEf,KAAK,CAACgB,KAAN,CAAYN,MAAZ,CAAmBO,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBN,GAAjB,CAA3B;AAFV,OAAP;;AAKF,SAAK,cAAL;AACE,aAAO,EACL,GAAGb,KADE;AAELW,QAAAA,YAAY,EAAE,IAFT;AAGLI,QAAAA,aAAa,EAAE;AAHV,OAAP;;AAMF;AACE,aAAOf,KAAP;AAzDJ;AA2DD,CA/DD","sourcesContent":["export default (state, action) => {\r\n  const { carts } = state;\r\n  let cartIndex;\r\n\r\n  switch (action.type) {\r\n    case \"ADD_CART\":\r\n      cartIndex = carts.findIndex(cart => cart.id === action.payload);\r\n      if (cartIndex !== -1) {\r\n        carts[cartIndex].quantity = carts[cartIndex].quantity + 1;\r\n        return {\r\n          ...state,\r\n          carts: [...carts]\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          carts: [...state.carts, { id: action.payload, quantity: 1 }]\r\n        };\r\n      }\r\n\r\n    case \"FETCH_CART\":\r\n      return {\r\n        ...state,\r\n        carts: [...state.carts, ...action.payload]\r\n      };\r\n\r\n    case \"UPDATE_CART\":\r\n      cartIndex = carts.findIndex(cart => cart.id === action.payload.id);\r\n      if (cartIndex !== -1) {\r\n        carts[cartIndex].quantity = action.payload.quantity;\r\n      }\r\n      return {\r\n        ...state,\r\n        carts: [...carts]\r\n      };\r\n\r\n    case \"REMOVE_CART\":\r\n      return {\r\n        ...state,\r\n        carts: state.carts.filter(cart => cart.id !== action.payload)\r\n      };\r\n    case \"GET_SEARCHED_STRING\":\r\n      return {\r\n        ...state,\r\n        searchString: action.payload.trim() === \"\" ? null : action.payload\r\n      };\r\n    case \"GET_SEARCHED_BOOKS\":\r\n      const reg = new RegExp(`${action.payload}`, \"gi\");\r\n      return {\r\n        ...state,\r\n        searchedBooks: state.books.filter(book => book.title.match(reg))\r\n      };\r\n\r\n    case \"CLEAR_SEARCH\":\r\n      return {\r\n        ...state,\r\n        searchString: null,\r\n        searchedBooks: []\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}